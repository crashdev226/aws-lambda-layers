name: Tests

on:
    push:
        branches: [ 'main' ]
    pull_request:
        branches: [ '*' ]

jobs:
    tests:
        name: Build and tests layers
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                cpu:
                    - x86
                    - arm
                php_version:
                    - 80
                    - 81
                    - 82
        steps:

            -   uses: actions/checkout@v3

            # See https://stackoverflow.com/questions/70312490/github-actions-runner-environment-doesnt-build-for-arm-images
            -   name: Set up QEMU to build ARM images
                uses: docker/setup-qemu-action@v2

            -   name: Set up Docker buildx to use BuildKit features
                uses: docker/setup-buildx-action@v2
                with:
                    # Sets up `docker build` command as an alias to `docker buildx`
                    install: true

            -   name: Build Docker images
                uses: docker/bake-action@v2.3.0
                env:
                    PHP_VERSION: ${{ matrix.php_version }}
                    CPU: ${{ matrix.cpu }}
                with:
                    # This is needed to make the built images available in later steps
                    # https://docs.docker.com/engine/reference/commandline/buildx_build/#load
                    load: true
                    # Cache Docker layers in GitHub Actions cache, scoped per image
                    # https://github.com/docker/bake-action/issues/87#issuecomment-1184659151
                    set: |
                        base-devel.cache-from=type=gha,scope=base-devel-${{ matrix.cpu }}
                        base-devel.cache-to=type=gha,scope=base-devel-${{ matrix.cpu }},mode=max
                        build-php.cache-from=type=gha,scope=build-${{ matrix.cpu }}-php-${{ matrix.php_version }}
                        build-php.cache-to=type=gha,scope=build-${{ matrix.cpu }}-php-${{ matrix.php_version }},mode=max
                        php.cache-from=type=gha,scope=${{ matrix.cpu }}-php-${{ matrix.php_version }}
                        php.cache-to=type=gha,scope=${{ matrix.cpu }}-php-${{ matrix.php_version }}
                        php-fpm.cache-from=type=gha,scope=${{ matrix.cpu }}-php-fpm-${{ matrix.php_version }}
                        php-fpm.cache-to=type=gha,scope=${{ matrix.cpu }}-php-fpm-${{ matrix.php_version }}
                        fpm-internal-src.cache-from=type=gha,scope=${{ matrix.cpu }}-fpm-internal-src-${{ matrix.php_version }}
                        fpm-internal-src.cache-to=type=gha,scope=${{ matrix.cpu }}-fpm-internal-src-${{ matrix.php_version }}
                        console.cache-from=type=gha,scope=${{ matrix.cpu }}-console-${{ matrix.php_version }}
                        console.cache-to=type=gha,scope=${{ matrix.cpu }}-console-${{ matrix.php_version }}
                        php-fpm-dev.cache-from=type=gha,scope=${{ matrix.cpu }}-php-fpm-dev-${{ matrix.php_version }}
                        php-fpm-dev.cache-to=type=gha,scope=${{ matrix.cpu }}-php-fpm-dev-${{ matrix.php_version }}

            -   run: docker image ls

            -   name: Test that layers can be exported
                run: |
                    make -f cpu-${{ matrix.cpu }}.Makefile layer-php-${{ matrix.php_version }}
                    make -f cpu-${{ matrix.cpu }}.Makefile layer-php-${{ matrix.php_version }}-fpm

            -   run: make -f cpu-${{ matrix.cpu }}.Makefile test-${{ matrix.php_version }}
